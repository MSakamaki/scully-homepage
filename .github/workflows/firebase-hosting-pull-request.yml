# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
'on': pull_request
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: npm dependencies
        run: npm ci     
      - name: unit test
        run: npx nx run-many --target=test --all --parallel
  # https://github.com/cypress-io/github-action
  cypress-run:
    runs-on: ubuntu-16.04
    container: cypress/browsers:node14.7.0-chrome84
    steps:
      - uses: actions/checkout@v1
      - uses: cypress-io/github-action@v2
        with:
          browser: chrome
          headless: true
          command: npx concurrently "npx nx e2e homepage-e2e --headless" "port=3333  npm start api" --names 'E2E,API' --success first --kill-others
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: diff_outputs
          # https://github.com/actions/upload-artifact/issues/55
          path: apps/homepage-e2e/src/snapshot/app.spec.ts/__diff_output__
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: npm dependencies
        run: npm ci     
      - name: format check
        run: npm run format:check
      - name: lint
        run: npx nx run-many --target=lint --all
  build_and_preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: npm dependencies
        run: npm ci     
      - name: build homepage
        run: npx nx run-many --target=build --configuration=production --projects=homepage,api --parallel
      - name: build scully
        run: npm run scully
      - name: firebase deploy
        id: fireabase_deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SCULLY_HOMEPAGE_5DF8C }}'
          projectId: scully-homepage-5df8c
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
      - name: Run Lighthouse on urls and validate with lighthouserc
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{ steps.fireabase_deploy.outputs.details_url }}
          uploadArtifacts: false
      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{ steps.fireabase_deploy.outputs.details_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')
              core.setOutput("comment", comment); 
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}